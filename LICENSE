#include "ut_cameriere.h"

ut_cameriere::ut_cameriere(QString n,QString c,QString u,QString p):UtenteGenerico(n,c,u,p){}

QString ut_cameriere::getTipo()const{return "cameriere";}

void ut_cameriere::add_consumazione(Tavolo *tav, Consumazioni *consumazione)
{
    tav->addConsumazione(consumazione);
}


void ut_cameriere::change_descrizione(Consumazioni *consum, const QString &nuova_desc)
{
    consum->setDescrizione(nuova_desc);
}

void ut_cameriere::cambio_occupazione(Tavolo *tav, bool nuovo_stato)
{
    tavoloristorante tavr;
    if(tav->getCoperto()>=tavr.getCoperto()){//sono in un tavolo ristorante
        tav->setOccupato(nuovo_stato);
        QMessageBox::information(0,"Occupazione tavolo","Cambio stato del tavolo avvenuto con successo");
    }
    else{

        QMessageBox::warning(0,"Occupazione tavolo","Cambio stato del tavolo non avvenuto");
    }
}

void ut_cameriere::remove_consumazione(Tavolo *tav, long int idc)
{
    tav->removeConsumazione(idc);
}


list<Consumazioni *> ut_cameriere::findConsumazioni(Tavolo *tv) const
{
    return tv->getOrdini();
}

void ut_cameriere::change_stato(Consumazioni *consum, const bool &nuovo_stato)
{
    if(consum->getTipo()=="bar"){
        consum->setConsegnato(nuovo_stato);
    }
}

void ut_cameriere::change_tipo(Consumazioni *consum, const QString &nuovo_tipo)
{
    consum->setTipo(nuovo_tipo);
}

void ut_cameriere::change_quantita(Consumazioni *consum, const int &nuova_quantita)
{
    consum->setQuantita(nuova_quantita);
}

